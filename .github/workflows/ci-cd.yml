name: CI/CD

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

env:
  IMAGE_NAME: mlops-assignment
  PY_VERSION: "3.9"

jobs:
  lint_and_test:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps (runtime + dev)
        run: |
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Lint
        run: flake8 .

      - name: Start API (background)
        run: |
          nohup python src/api.py > api.log 2>&1 &
          echo $! > api.pid
          # give Flask a moment to boot
          sleep 4

      - name: Run tests
        run: |
          pytest -q || (cat api.log && exit 1)

      - name: Upload API log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-log
          path: api.log

      - name: Stop API
        if: always()
        run: |
          kill $(cat api.pid) || true

  build_and_push:
    needs: lint_and_test
    runs-on: self-hosted
    if: github.event_name == 'push'  # only push images on push, not PRs
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_droplet:
    needs: build_and_push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: SSH and restart container on Droplet
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DO_DROPLET_HOST }}
          username: ${{ secrets.DO_DROPLET_USER }}
          key: ${{ secrets.DO_DROPLET_SSH_KEY }}
          script: |
            set -e
            docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
            IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/mlops-assignment:latest"
            docker pull "$IMAGE"
            docker rm -f mlops-api || true
            docker run -d --name mlops-api -p 5000:5000 "$IMAGE"
            docker ps --filter name=mlops-api
